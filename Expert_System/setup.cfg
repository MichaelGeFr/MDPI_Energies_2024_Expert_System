[metadata]
# specify a package name. This name should match the name of the folder "es-tpcm". All sources should
# be located in that folder
name = es-tpcm
version = 0.1b1
author = Ioshchikhes, Borys; Frank, Michael
author_email = B.Ioshchikhes@PTW.TU-Darmstadt.de
url = www.ptw.tu-darmstadt.de
description = Expert system for increasing energy efficiency of a throughput cleaning machine
long_description = file: README.md
keywords = sustainability; climate neutrality; fuzzy reasoning; energy analysis; optimization
license = BSD 2-Clause License
license_file = LICENSE
classifiers =  # specify some classifiers, to signify, who you are developing for. See: https://pypi.org/classifiers/
    License :: OSI Approved :: BSD License
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    Intended Audience :: Manufacturing
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Topic :: Software Development :: Libraries
    Operating System :: OS Independent
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11

[options]
include_package_data = True
packages = find:
python_requires = >=3.7
# Install requires specifies all packages that are required for your project. The following is an example.
install_requires =
    numpy
    pandas
    requests

[options.extras_require]
# This is an example for an optional "extra" that requires additional packages.
# The packages listed in the develop option are required for the standardized development process.
DEVELOP =
    # Specific requirements for development
    sphinx
    sphinx_rtd_theme
    pre-commit
    pytest
    pytest-cov
    black
    blacken-docs
    isort
    pyupgrade
    # MyPy requirements and typing packages
    mypy
    # Linting / Flake8 requirements and linting packages
    flake8
    pyflakes
    pycodestyle
    flake8-builtins
    flake8-eradicate
    flake8-comprehensions
    flake8-mutable
    flake8-print
    flake8-pytest-style
    flake8-requirements
    pep8-naming
    flake8-rst-docstrings
    flake8-typing-imports
    flake8-simplify

[options.packages.find]
# Tell the build system, where to look for your code
include =
    es-tpcm*
exclude =
    test*

[options.package_data]
* = *.md

[flake8]
# Configure the flake8 linting tool
format = default
show_source = true
extend_exclude =
    docs/conf.py,
    build,
    dist
max_line_length = 120
indent_size = 4
extend_ignore =
    # Ignore whitespaces before ':' warning, because this is fixed automatically by black:
    E203
    # Ignore line breaks before/after binary operators, this is fixed automatically by black:
    W503
    # Ignore 1 blank line required before class docstring, this is in conflict to automatic fixes by black:
    D203
    # Some ReStructuredText keywords are specific to sphinx and will not be recognized correctly:
    RST304
    # Warnings about pytest fixtures without return values are broken:
    PT019
per_file_ignores =
    # Ignore unused imports in __init__ files.
    __init__.py: F401
max_complexity = 20
